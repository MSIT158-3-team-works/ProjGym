<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAG7AcEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7Jooor7g+CDpR+tFFABR/KjFFABRRRQAUUCj8aACj9aKKACii
        igAooooAKO1H0ooAKKKKACjp1oooAKKKKACjrRRQAUUUUAHpRRRQAUUUUAFFFFABRRRQAlLRR9aACiii
        gA/lRRRQAUUUUAFHrRRQAUUUD3oAKKO1JQAtFFFABzSUtFAB+NFHtRQAm73opfw/WigAooooAKKKKACi
        iigAooooAKDRRQAd6KPpRQAUUUUAFFFH1oAKKKKACj+dFFABiiiigAo9aKKACijtRQAUUUUAFFFFABS0
        lGKADvRRSUALRRRQAUUe1H8qACiiigAooooAKPXtRRQAetFHeigAooooAKKKKACiiigAooozQAlLRRzQ
        AfjRS5FFACUUc0UAFFHaigAo9aKKACiiigAooooAKKKWgBKKKKAD60UlLQAUUUe1ABRRRQAUfyo/Wj9K
        ACjmj60UAFFHaigAooooAKKKKACiij3oAKKP1ooAPpRRRQAUUUUAFH1o/nRQAUUUUAFFFFAB9KKKKACj
        9KKP5UAFFH4UUAFFFFABRRR70AFFH1o+tAB+FFHHpRQAcUUUUAHP4UfWiigAooooAOKKKKACij6UUAH8
        qKKKACj6UUUAFFFFABRRRQAUUfyooAKKKKACiiigAooo7UAFFFFABRiiigAoopaAE9KKKKACj8KKKACi
        iigAooooAKPWikoAWj9aKKACiiigAooooAKKKKACiiigA/nRRRQAUUfpRQAf56UUZHvRQAUUUUAFFFFA
        Bmij+dFABR6UUUAFFFFABRRRxQAfyo6UUUAFFFFABR+NFFABRRR3oAKKPrRQAe9FFFABR9aKKACij0oo
        AKKM0fzoAKKKWgBKKKKACiiigAooo9qACiiigA70UUUAFFFFABRRQKADtRRRQAUUUUAFFFFABRRRQAUU
        UUAGTRS7aKAEooooAKM8UcUfpQAUUUfWgAoo/nRQAUUdeKKAD9KKKKACij2ooAKKKKACgUUUAFFFFABR
        nvRRQAUUUUAGPzooooAKDRRQAelFFFABRRRQAZoo70UAFH1oooAKP0oooAKKKWgBOaOtFFABRRRQAUUU
        UAFHfrRzRQAUUUUAFFFFABRRS/zoASiiigBaKT8KKAD9KKKKADNFFFABRRRQAUUUUAHpRRRQAUc0UfrQ
        AUtIaKADrRRRzQAUfWjpSigBKKPxooAKPwoooAKKKKACjmijrQAUUcUUAFFBooAKKKKACj60UUAFHNHW
        igAooooAKKKKACiiigAoo/nRQAtJR+lFAC/zpKKKAD0ooooAKKKKAFpKKKACiij0oAXb70UnFFABRxRR
        60AFFH60UAFFFFABRRRQAUUUUAGKKKKACiij0oAKKKKACj8KKKAA0UfpR7UAFFFFAB6+lFFFABR0oooA
        KPeiigAooooAKKKKACiiigAooooAKKKKACj+dFFABR60UUAFFBooAPrR9KP1ooAKSlooAO1H86OaKACi
        j1ooAKPxoooAP0ooooAPxooxRQA/bSbTU22jb7VNzSyIttJt/GpttG00XCyIttJtqbbRtouFiLbSbam2
        0bfai4WRDto21NtpdtHMFiDbS7al20u2i4WRDt70m32qbbRtouFiHbS7al20baOYLEW2k21Nto20XCyI
        ttG2pdtLtouFiHaaTaam20baLhZEO32pdtS7aXbRcLIh20m2pttG2i4WIdtLtqXbRtouFkQ7TRtNTbaN
        tFwsiLbSbam2/lRtouFiLbRtqXbRtouKxDtpdtS7aNtFx2RDtpduKl20u2i4WRDtNJtqbbS7aLhYg20b
        am20baOYLEW2jbUu2l20XCyINuKNtTbaNtFwsiHbS7alxRtouFiHbRtqbbRtouFkQ7T9aNvtU22jbRcL
        Ii20bal20baLhYi20m2pttG2i4WIdtFT7f8AOaKVw1JNtGypdvtS7fas7mvKQ7KNtTbfak2+1FxcpFso
        2VNspNvt+lFw5SLbRtqbbRtouHKRbaNlS7fajbRcOUh2UeX71Nto2/5xRcfKQ7KNtTbf84o20XFykO2j
        bUuBS7fb9KLhykW2k2VNt9qMfWi4cpDto21Nt9jRtPpmi4cpDto21Ptpu3/OKLhykWyjbU22kK0XDlI9
        tJtqbb7Um32ouHKRbaNtTbfajb7Gi4cpDto21Nt9qNvsaLhykO2jZU22jH1ouHKQ+XRtqbb7Gjb9aLhy
        kO2l21Lto2+lFw5SHbRtqXb7Uu2i4cpDso21Nt+tG3tjNFw5SHbS7al2/Wjb9fyouHKRbaTbU232NG36
        0XDlIdtG2ptvsaNvt+lFw5SHZS7al20bfb9KLhykOyjbU22k2+1Fw5SPbSbeKm20m2i4cpFto2VNt/zi
        jbntRcOUh20bam2+1G2i4cpDtoqbZRRcOUl20bTU22jbWNzo5SLFJtNT7fajbRcOUg2mjaan2+1G2i4c
        pBto21Pto2+1Fw5SDbRtNT7fajbRcOUg20bam20bKLhykO00bam20baLhykO00bam20pWi4cpBtpcVLt
        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
        hYbRTqKLhYbRTqNoouFhtFOoouFhaKKKQwooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooKCikzS1Nw0CiikzRcNBaKTNLRcAopM0tFw0CikzRmi4C0UUmaLhoLRRRRc
        AopM0ZouGgtFFJmi4C0UUUXDQKKKKLgFFJmjNFwFopM0ZouAtFJmjNFw0FopM0ZouAtFJmjNFwFopM0t
        FwCikzS0XDQKKSlouGgUUUlFwFoopM0XGLRSZpaLiCikzRmi4C0UUmaLhoLRSZozRcBaKTNGaLgLRRRR
        cNAopM0ZouAtFJmii4xtFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUgCiiigAooopgFF
        FFABRRRQAUUUUAFFFFIAooopgFFFFABRRRQAUUUUgCiiimAUUUUgCiiigAooopgFFFFABRRRSAKKKKAC
        iiigAooopgFFFFACbqN1NopAO3UbqbRQA7dRuptFADt1G6m0UAO3UbqbRQA7dRuptFADt1G6m0UAO3Ub
        qbRQA7dRuptFADt1G6m0UAO3UbqbRQA7dRuptFADt1G6m0UAO3UbqbRQA7dRuptFADt1G6m0UAO3Ubqb
        RQA7dRuptFADt1G6m0UAO3UbqbRQA7dRuptFADt1G6m0UAO3UbqbRQA7dRuptFADt1G6m0UAO3UbqbRQ
        A7dRuptFADt1G6m0UAO3UU2igAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACin0UAMop9FADKKfRQAyin0UAMop9FADKKfRQAyin0UAMop9FADKKfRQAyin0UAMop9FADKKfRQA
        yin0UAMop9FADKKfRQAyin0UAMop9FADKKfRQAyin0UAMop9FADKKfRQAyin0UAMop9FADKKfRQAyin0
        UAMop9FADKKfRQAyin0UAMop9FAH/9k=
</value>
  </data>
</root>